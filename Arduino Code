#include <Servo.h>

Servo servo1, servo2, servo3;
char command;

void setup() {
  Serial.begin(9600);
  servo1.attach(9);  //Head servo
  servo2.attach(3);  //left hand
  servo3.attach(5);  //right hand
  // Initialize the servo position
  servo1.write(90);
  servo2.write(0);
  servo3.write(180);
}

void loop() {
  if (Serial.available() > 0) {
    command = Serial.read();
    handleCommand(command);
  }
}

void handleCommand(char cmd) {
  if (cmd == 'p') {
    Serial.println("Pause command received");
    // Perform actions to pause
    servo1.write(90);
    servo2.write(0);
    servo3.write(180);
    delay(1000);  // Simulated delay, replace with actual actions

  } else if (cmd == 'r') {
    // Resume logic
    Serial.println("Resume command received");
    // Perform actions to resume
    servo1.write(90);
    servo2.write(0);
    servo3.write(180);
    //delay(1000);  // Simulated delay, replace with actual actions

  } else if (cmd == 'c'){
    Serial.println("Thanks command received");
    servo1.write(90);
    servo2.write(0);
    servo3.write(180);
    //delay(1000);  // Simulated delay, replace with actual actions

  } else if (cmd == 'd'){
    Serial.println("Start up command received");
    servo1.write(0);
    delay(1000);
    servo1.write(180);
    delay(1000);
    servo1.write(0);
    servo2.write(0);
    servo3.write(180);
    //delay(1000);  // Simulated delay, replace with actual actions

  } else if (cmd == 'e'){
    Serial.println("joke command received");
    servo1.write(90);
    servo2.write(0);
    servo3.write(180);
    //delay(1000);  // Simulated delay, replace with actual actions

  } else if (cmd == '1'){
    Serial.println("greetings command received");
    servo1.write(0);
    servo2.write(0);
    servo3.write(0);
    delay(1000);  // Simulated delay, replace with actual actions
    servo1.write(0);
    servo2.write(0);
    servo3.write(180);
    //delay(1000);  // Simulated delay, replace with actual actions

  } else if (cmd == 'f'){
    Serial.println("shut down command received");
    servo1.write(90);
    servo2.write(0);
    servo3.write(180);

  } else if (cmd == 'g'){
    Serial.println("command received");
    servo1.write(90);
    servo2.write(0);
    servo3.write(180);
    //delay(1000);  // Simulated delay, replace with actual actions

  } else if (cmd == 'h'){
    Serial.println("youtube command received");
    servo1.write(180);
    servo2.write(90);
    servo3.write(180);
    delay(2000);  // Simulated delay, replace with actual actions
    servo1.write(90);
    servo2.write(0);
    servo3.write(180);

  } else if (cmd == 'i'){
    Serial.println("google command received");
    servo1.write(180);
    servo2.write(90);
    servo3.write(180);
    delay(2000);  // Simulated delay, replace with actual actions
    servo1.write(90);
    servo2.write(0);
    servo3.write(180);

  }else if (cmd == 'j') {
    Serial.println("ai command received");
    servo1.write(0);
    servo2.write(0);
    servo3.write(180);
    delay(2000);  // Simulated delay, replace with actual actions
    // Send a signal to indicate completion to Python
    Serial.write('d');  // 'd' can be any character indicating completion
    delay(100);  // Delay to ensure the Python code has time to read the signal
  }else if (cmd == 'k'){
    Serial.println("pause command received");
    servo1.write(90);
    servo2.write(0);
    servo3.write(180); //pause to default position
  }else if (cmd == 'r'){
    Serial.println("resume command received");
    servo1.write(90);
    servo2.write(0);
    servo3.write(180);   
  }else if (cmd == 'u'){
    Serial.println("Hands up command received");
    servo1.write(90);
    servo2.write(180);
    servo3.write(0);   
  }else if (cmd == 'v'){
    Serial.println("Hands down command received");
    servo1.write(90);
    servo2.write(0);
    servo3.write(180);   
  }
}
